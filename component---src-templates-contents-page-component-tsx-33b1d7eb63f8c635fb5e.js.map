{"version":3,"sources":["webpack:///./src/templates/contents-page/styles.ts","webpack:///./src/templates/contents-page/template.tsx","webpack:///./src/templates/contents-page/component.tsx","webpack:///./src/templates/utils/getContentsPagesNavRoot.ts","webpack:///./src/components/MainWithNavigation/MainWithNavigation.styles.ts","webpack:///./src/components/MainWithNavigation/MainWithNavigation.component.tsx","webpack:///./src/components/MainWithNavigation/index.ts","webpack:///./src/utils/dynamicalNavigation.ts","webpack:///./src/utils/Sticky.ts","webpack:///./src/components/Aside/utils.ts","webpack:///./src/components/Aside/Aside.styles.ts","webpack:///./src/components/Aside/components/Arrow/Arrow.styles.ts","webpack:///./src/components/Aside/components/Arrow/Arrow.component.tsx","webpack:///./src/components/Aside/components/CloseButton/CloseButton.styles.ts","webpack:///./src/components/Aside/components/CloseButton/CloseButton.component.tsx","webpack:///./src/components/Aside/components/Mask/Mask.styles.ts","webpack:///./src/components/Aside/components/Mask/Mask.component.tsx","webpack:///./src/components/Aside/Aside.component.tsx","webpack:///./src/components/Aside/index.tsx"],"names":["ContentsGlobalStyle","createGlobalStyle","ContentsPageTemplate","title","location","MainWithNavigation","root","target","Loader","LogoLoader","ContentsPage","pageContext","data","markdownRemark","frontmatter","fields","slug","navRootPath","split","slice","join","getContentsPagesNavRoot","Layout","pageTitle","Aside","pageQuery","StyledMainWithNavigation","styled","StyledMain","media","tablet","desktop","children","NavigationStyle","colorWarmPurple","colorWarmGrey","colorVerise","addEventListener","handler","window","removeEventListener","useSticky","ref","isSticky","setIsSticky","asideTop","current","getBoundingClientRect","top","pageYOffset","resetPosition","useEffect","setAsideHeight","StyledAside","aside","StyledArrow","div","Arrow","isActive","className","getClassName","flag","HIDDEN_CLASS_NAME","StyledCloseButton","button","colorLipstick","CloseButton","callback","onClickCallback","onClick","event","stopPropagation","StyledMask","colorLiliac","Mask","useState","setIsActive","useContext","AsideTopContext","createRef","useClickOutside","ACTIVE_CLASS_NAME","STICKY_CLASS_NAME"],"mappings":"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","file":"component---src-templates-contents-page-component-tsx-33b1d7eb63f8c635fb5e.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst ContentsGlobalStyle = createGlobalStyle`\n  main {\n    text-align: center;\n    \n    .gatsby-dnmcl-nav {\n      text-align: center;\n      padding: 2rem;\n  \n      .gatsby-dnmcl-nav-link {\n        white-space: normal;\n        padding: 0;\n        font-weight: normal;\n\n        &_head {\n          display: none;\n        }\n  \n        &_to-page:before {\n          display: none;\n        }\n      }\n  \n      .gatsby-dnmcl-nav-list {\n        display: inline-block;\n        list-style: decimal;\n        font-size: 2.6rem\n  \n        &__item {\n          text-align: left;\n        }\n      }\n    }\n  } \n`;\n\nexport default ContentsGlobalStyle;\n","import React from 'react';\nimport MainWithNavigation from '../../components/MainWithNavigation';\nimport ContentsGlobalStyle from './styles';\nimport ContentsPageTemplateComponent from './interfaces';\nimport { Navigation } from 'gatsby-dynamical-navigation';\nimport LogoLoader from '../../components/LogoLoader';\n\nconst ContentsPageTemplate: ContentsPageTemplateComponent = ({ title, location }) => {\n  return (\n    <MainWithNavigation>\n      <ContentsGlobalStyle />\n      <h1>{title}</h1>\n      <Navigation root={location} target={location} Loader={LogoLoader} />\n    </MainWithNavigation>\n  );\n};\n\nexport default ContentsPageTemplate;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Article, MarkdownPageProps } from '../interfaces';\nimport ContentsPageTemplate from './template';\nimport getContentsPagesNavRoot from '../utils/getContentsPagesNavRoot';\nimport Layout from '../../components/Layout';\nimport Aside from '../../components/Aside';\nimport { NavigationStyle } from '../../utils/dynamicalNavigation';\nimport { Navigation } from 'gatsby-dynamical-navigation';\nimport LogoLoader from '../../components/LogoLoader';\n\nconst ContentsPage: React.FC<MarkdownPageProps<Article>> = ({\n  pageContext,\n  data: {\n    markdownRemark: {\n      frontmatter: { title },\n      fields: { slug: location },\n    },\n  },\n}) => {\n  const root = getContentsPagesNavRoot(location, pageContext);\n\n  return (\n    <Layout pageTitle={title}>\n      <Aside>\n        <NavigationStyle />\n        <Navigation {...{ root, target: location, Loader: LogoLoader }} />\n      </Aside>\n      <ContentsPageTemplate {...{ title, root, location }} />\n    </Layout>\n  );\n};\n\nexport default ContentsPage;\n\nexport const pageQuery = graphql`\n  query contentsPageTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","import { PageContext } from '../interfaces';\n\nexport default (location: string, pageContext?: PageContext): string =>\n  (pageContext && pageContext.navRootPath) ||\n  `${location\n    .split('/')\n    .slice(0, -2)\n    .join('/')}/`;\n","import styled from 'styled-components';\nimport StyledMain from '../Main/Main.styles';\nimport { media } from '../../utils/css-utils';\n\nconst StyledMainWithNavigation = styled(StyledMain)`\n  margin-left: 3rem;\n  ${media.tablet`\nmargin-left: 20rem;\n`}\n  ${media.desktop`\n  margin-left: 30rem;\n`}\n`;\n\nexport default StyledMainWithNavigation;\n","import React from 'react';\nimport StyledMainWithNavigation from './MainWithNavigation.styles';\n\nconst MainWithNavigation: React.FC = ({ children }) => <StyledMainWithNavigation>{children}</StyledMainWithNavigation>;\n\nexport default MainWithNavigation;\n","export { default } from './MainWithNavigation.component';\n","import { createGlobalStyle } from 'styled-components';\nimport { colorWarmGrey, colorWarmPurple, colorVerise, media } from './css-utils';\n\nexport const NavigationStyle = createGlobalStyle`\n  .logo-loader {\n    margin-top: 3rem;\n    max-width: 10rem;\n    opacity: .7;\n  }\n\n  .gatsby-dnmcl-nav-link {\n    text-decoration: none;\n    display: flex;\n    padding: 0 0 1rem 1rem;\n    color: ${colorWarmPurple};\n    font-weight: bold;\n\n    &_to-page {\n      padding: 0;\n      color: ${colorWarmGrey};\n      font-weight: normal;\n\n      &:before {\n        content: \"\\\\00A7\";\n        margin-right: 1rem;\n      }\n    }\n\n    &_head {\n      box-sizing: border-box;\n      font-style: italic;\n      font-weight: bold;\n      color: ${colorWarmPurple};\n      font-size: 1.8rem;\n      display: flex;\n      align-items: center;\n      margin-bottom: 3rem;\n\n      &:before, &:after {\n        content: '';\n        width: 100%;\n        background-color: currentColor;\n        height: 2px;\n      }\n\n      &:before {\n        margin-right: 1rem;\n      }\n\n      &:after {\n        margin-left: 1rem;\n      }\n    }\n  \n    &.target {\n      color: ${colorVerise};\n      display: block;\n      padding-bottom: 1rem;\n    }\n\n    &.active {\n      color: ${colorVerise};\n    }\n  }  \n\n  .gatsby-dnmcl-nav-list {\n    list-style: none;\n    padding: 0 0 1rem 1rem;\n  }\n\n  ${media.tablet`\n    .gatsby-dnmcl-nav {\n      white-space: nowrap;\n    }\n  `}\n\n  ${media.desktop`\n    .gatsby-dnmcl-nav {\n      white-space: normal;\n    }\n  `}\n`;\n","import { useEffect } from 'react';\nimport UseSticky, {\n  ResetPosition,\n  Handler,\n  RemoveEventListener,\n  AddEventListener,\n} from './interfaces/Sticky.interfaces';\n\nconst resetPosition: ResetPosition = (ref, isSticky, setIsSticky, asideTop) => {\n  if (!ref.current) {\n    return;\n  }\n\n  const { top } = ref.current.getBoundingClientRect();\n\n  if (top <= 0 && !isSticky) {\n    setIsSticky(true);\n    return;\n  }\n\n  if (pageYOffset < asideTop && isSticky) {\n    setIsSticky(false);\n  }\n};\n\nconst removeEventListener: RemoveEventListener = handler => window.removeEventListener('scroll', handler);\n\nconst addEventListener: AddEventListener = handler => {\n  window.addEventListener('scroll', handler);\n\n  return (): void => {\n    removeEventListener(handler);\n  };\n};\n\nconst useSticky: UseSticky = (ref, isSticky, setIsSticky, asideTop) => {\n  const handler: Handler = () => {\n    resetPosition(ref, isSticky, setIsSticky, asideTop);\n  };\n\n  useEffect(() => {\n    handler();\n    addEventListener(handler);\n  });\n};\n\nexport default useSticky;\n","import { GetCloseButtonOnClick } from './components/CloseButton/CloseButton.interfaces';\nimport { SetAsideHeight } from './Aside.interfaces';\n\nexport const getCloseButtonOnClick: GetCloseButtonOnClick = callback => (event): void => {\n  event.stopPropagation();\n  callback();\n};\n\nexport const setAsideHeight: SetAsideHeight = ({ top }) => `calc(100vh - ${top}px)`;\n","import styled from 'styled-components';\nimport { media } from '../../utils/css-utils';\nimport { StyledAsideProps } from './Aside.interfaces';\nimport { setAsideHeight } from './utils';\n\nconst StyledAside = styled.aside<StyledAsideProps>`\n  width: 3rem;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: absolute;\n  top: initial;\n  z-index: 100;\n  transition: 0.3s;\n  height: 5rem;\n  max-height: ${setAsideHeight};\n\n  &.sticky {\n    position: fixed;\n    top: 0;\n    max-height: auto;\n  }\n\n  &.active {\n    width: 100%;\n    background-color: #fff;\n    min-height: ${setAsideHeight};\n    max-height: none;\n    height: 100%;\n\n    & .gatsby-dnmcl-nav-link_head {\n      margin-right: 5rem;\n      margin-left: 5rem;\n    }\n\n    & > .gatsby-dnmcl-nav {\n      text-align: center;\n\n      & > .gatsby-dnmcl-nav-list {\n        display: inline-block;\n      }\n    }\n  }\n\n  ${media.tablet`\n    width: 20rem;\n    height: auto;\n    padding: 2rem;\n    background-color: #fff;\n  `}\n\n  ${media.desktop`\n    width: 30rem;\n    position: absolute;\n\n    &:before, &:after {\n      display: none;\n    }\n\n    &.active {\n      width: 30rem;\n      & .gatsby-dnmcl-nav-link_head {\n        margin-right: 0;\n        margin-left: 0;\n      }\n\n      &>.gatsby-dnmcl-nav {\n        text-align: left;\n\n        &>.gatsby-dnmcl-nav-list {\n          display: block;\n        }\n      }\n    }\n  `}\n`;\n\nexport default StyledAside;\n","import styled from 'styled-components';\nimport { media } from '../../../../utils/css-utils';\n\nconst StyledArrow = styled.div`\n  display: none;\n  position: absolute;\n  top: 25%;\n  font-size: 5rem;\n  color: #c788fe;\n  right: 0;\n  margin-right: 2rem;\n  animation: arrow 2.5s infinite;\n\n  ${media.tablet`\n    display: block;\n  `}\n  ${media.desktop`\n    display: none;\n  `}\n\n    &.hidden {\n    display: none;\n  }\n\n  @keyframes arrow {\n    from {\n      margin-right: 2rem;\n      opacity: 0;\n    }\n    60% {\n      margin-right: 2rem;\n      opacity: 0;\n    }\n    70% {\n      opacity: 1;\n    }\n    to {\n      margin-right: 0;\n      opacity: 0;\n    }\n  }\n`;\n\nexport default StyledArrow;\n","import React from 'react';\nimport { HIDDEN_CLASS_NAME } from '../../../../constants/furtherClassNames';\nimport StyledArrow from './Arrow.styles';\nimport getClassName from '../../../../utils/getClassName';\nimport IsActiveI from '../../../../commonInterfaces/IsActiveI';\n\nconst Arrow: React.FC<IsActiveI> = ({ isActive }) => {\n  const className = getClassName('', [{ flag: isActive, className: HIDDEN_CLASS_NAME }]);\n\n  return <StyledArrow {...{ className }}>&#8680;</StyledArrow>;\n};\n\nexport default Arrow;\n","import styled from 'styled-components';\nimport { colorLipstick, media } from '../../../../utils/css-utils';\n\nconst StyledCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 100%;\n  transform: translateX(-100%);\n  margin: 2.75rem 0 0 -4rem;\n  background: none;\n  border: none;\n  outline: none;\n  animation: button 0.5s ease-out;\n\n  &:before,\n  &:after {\n    content: '';\n    width: 3.5rem;\n    height: 1rem;\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: ${colorLipstick};\n    border-radius: 3px;\n  }\n\n  &:before {\n    transform: rotate(45deg);\n  }\n\n  &:after {\n    transform: rotate(-45deg);\n  }\n\n  ${media.desktop`\n    display: none;\n  `}\n\n  &.hidden {\n    display: none;\n  }\n\n  @keyframes button {\n    from {\n      opacity: 0;\n      transform: scale(0) translateX(-100%);\n    }\n    50% {\n      opacity: 0;\n      transform: scale(0.5) translateX(-100%);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1) translateX(-100%);\n    }\n  }\n`;\n\nexport default StyledCloseButton;\n","import React from 'react';\nimport CloseButtonComponent from './CloseButton.interfaces';\nimport StyledCloseButton from './CloseButton.styles';\nimport { getCloseButtonOnClick } from '../../utils';\nimport getClassName from '../../../../utils/getClassName';\nimport { HIDDEN_CLASS_NAME } from '../../../../constants/furtherClassNames';\n\nconst closeButtonClassName = 'close-button';\n\nconst CloseButton: CloseButtonComponent = ({ isActive, onClickCallback }) => {\n  const className = getClassName(closeButtonClassName, [{ flag: !isActive, className: HIDDEN_CLASS_NAME }]);\n  const onClick = getCloseButtonOnClick(onClickCallback);\n\n  return <StyledCloseButton {...{ className, onClick }} />;\n};\n\nexport default CloseButton;\n","import styled from 'styled-components';\nimport { colorLiliac, colorWarmPurple, media } from '../../../../utils/css-utils';\n\nconst StyledMask = styled.div`\n  display: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  display: block;\n  background: linear-gradient(90deg, ${colorLiliac}, #fff);\n  opacity: 1;\n  transition: opacity 0.3s;\n\n  &.hidden {\n    opacity: 0;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    width: 2.5rem;\n    height: 2.5rem;\n    border: solid ${colorWarmPurple}30;\n    border-width: 4px 4px 0 0;\n    transform: rotate(45deg) translate(-30%, -40%);\n    top: 50%;\n    position: relative;\n    left: -1rem;\n  }\n\n  ${media.tablet`\n    background: linear-gradient(to right, rgba(255, 255, 255, 0), #fff);\n    &:after {\n      display: none;\n    }\n  `}\n  ${media.desktop`\n    display: none;\n  `}\n  &.hidden {\n    display: none;\n  }\n`;\n\nexport default StyledMask;\n","import React from 'react';\nimport getClassName from '../../../../utils/getClassName';\nimport { HIDDEN_CLASS_NAME } from '../../../../constants/furtherClassNames';\nimport StyledMask from './Mask.styles';\nimport IsActiveI from '../../../../commonInterfaces/IsActiveI';\n\nconst Mask: React.FC<IsActiveI> = ({ isActive }) => {\n  const className = getClassName('', [{ flag: isActive, className: HIDDEN_CLASS_NAME }]);\n\n  return <StyledMask {...{ className }} />;\n};\n\nexport default Mask;\n","import React, { useState, createRef, useContext } from 'react';\nimport useClickOutside from '../../utils/ClickOutside';\nimport useSticky from '../../utils/Sticky';\nimport StyledAside from './Aside.styles';\nimport { ACTIVE_CLASS_NAME, STICKY_CLASS_NAME } from '../../constants/furtherClassNames';\nimport getClassName from '../../utils/getClassName';\nimport AsideTopContext from '../Contexts/AsideTopContext';\nimport Arrow from './components/Arrow';\nimport CloseButton from './components/CloseButton';\nimport Mask from './components/Mask';\n\nconst Aside: React.FC = ({ children }) => {\n  const [isActive, setIsActive] = useState(false);\n  const [isSticky, setIsSticky] = useState(false);\n  const { top } = useContext(AsideTopContext);\n  const ref = createRef<HTMLElement>();\n\n  useSticky(ref, isSticky, setIsSticky, top);\n  useClickOutside(ref, () => setIsActive(false));\n\n  const className = getClassName('', [\n    {\n      flag: isActive,\n      className: ACTIVE_CLASS_NAME,\n    },\n    {\n      flag: isSticky,\n      className: STICKY_CLASS_NAME,\n    },\n  ]);\n\n  const onClick = (): void => setIsActive(true);\n  const onClickCallback = (): void => setIsActive(false);\n\n  return (\n    <StyledAside {...{ ref, isSticky, top, className, onClick }}>\n      <Mask {...{ isActive }} />\n      <Arrow {...{ isActive }} />\n      <CloseButton {...{ isActive, onClickCallback }} />\n      {children}\n    </StyledAside>\n  );\n};\n\nexport default Aside;\n","export { default } from './Aside.component';\n"],"sourceRoot":""}